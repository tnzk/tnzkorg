{"en":{"title":"Install Puppeteer on MacBook Pro with Apple Silicon / M1","distro":"https://dev.to/tnzk/install-puppeteer-on-macbook-pro-with-apple-silicon-m1-3kc","body":"<p>For those who wouldn't like to work outside the CLI.</p>\n<p>Install Chromium via brew:</p>\n<pre><code class=\"language-zsh\">$ brew install chromium\n$ `which chromium`\n</code></pre>\n<p>Set an environemntal variable to prevent <code>[npm/yarn/pnpm] install</code> downloading Chromium automatically (I'd put <code>.env</code> into the repo so coworkers with Apple Silicon can <code>$ source .env</code> .)</p>\n<pre><code class=\"language-zsh:.env\">export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true\nexport PUPPETEER_EXECUTABLE_PATH=`which chromium`\n</code></pre>\n<p>Although <a href=\"https://github.com/puppeteer/puppeteer/issues/6622#issuecomment-788199984\">in some situations you need to patch Puppeteer</a> since it has a hard-coded executable path to <code>/usr/bin/chromium-browser</code>, you can try an option of <code>puppeteer.launch</code> to overwrite it.</p>\n<pre><code class=\"language-js\">const browser = await puppeteer.launch({\n    executablePath: process.env[‘PUPPETEER_EXECUTABLE_PATH’],\n})\n</code></pre>\n<h1>参考</h1>\n<ul>\n<li><a href=\"https://github.com/puppeteer/puppeteer/issues/6622\">Installation fails on Apple Silicon / M1</a></li>\n<li><a href=\"https://qiita.com/3tomcha/items/f141faa1cb24124e9d66\">M1 MacBookでpuppeteerが動かない時の解決策</a></li>\n<li><a href=\"https://qiita.com/Buzzword111/items/aa5dd4c89358a63f970a\">M1 Macでpuppeteerを動かす方法（2020年12月21日時点）</a></li>\n</ul>\n"},"ja":{"title":"Apple Silicon / M1 で Puppeteer のインストールに失敗する場合","distro":"https://zenn.dev/tnzk/articles/a99b246faf5f69","body":"<p>なるべくコマンドライン以外の作業をしたくない人向け:</p>\n<p>brew で Chromium をインストール:</p>\n<pre><code class=\"language-zsh\">$ brew install chromium\n$ `which chromium`\n</code></pre>\n<p><code>[npm/yarn/pnpm] install</code> で Chromium の自動ダウンロードが始まらないように環境変数を設定しておく（個人的には <code>.env</code> に書いといて M1の人だけ <code>$ source .env</code> する運用が楽だなと思います）:</p>\n<pre><code class=\"language-zsh:.env\">export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true\nexport PUPPETEER_EXECUTABLE_PATH=`which chromium`\n</code></pre>\n<p>Puppeteer には <code>/usr/bin/chromium-browser</code> がベタ書きされていて<a href=\"https://github.com/puppeteer/puppeteer/issues/6622#issuecomment-788199984\">パッチを当てなきゃいけないみたいな話</a>もあるのだが、実際は <code>puppeteer.launch</code> のオプションで実行時に指定できる。何らかのフレームワークが Puppeteer を隠蔽しきっていてこのオプションを触れないとかでなければこっちのほうが楽。</p>\n<pre><code class=\"language-js\">const browser = await puppeteer.launch({\n    executablePath: process.env[‘PUPPETEER_EXECUTABLE_PATH’],\n})\n</code></pre>\n<h1>参考</h1>\n<ul>\n<li><a href=\"https://github.com/puppeteer/puppeteer/issues/6622\">Installation fails on Apple Silicon / M1</a></li>\n<li><a href=\"https://qiita.com/3tomcha/items/f141faa1cb24124e9d66\">M1 MacBookでpuppeteerが動かない時の解決策</a></li>\n<li><a href=\"https://qiita.com/Buzzword111/items/aa5dd4c89358a63f970a\">M1 Macでpuppeteerを動かす方法（2020年12月21日時点）</a></li>\n</ul>\n"}}